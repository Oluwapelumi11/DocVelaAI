@using DocVela.Services.Ingestion
@inject IServiceProvider service


<div class="uploader">
    <InputFile OnChange="LoadFiles" multiple accept=".pdf"  />
</div>
@if (uploadProgress > 0)
{
    <div>
        <p>Uploading: @uploadProgress% Complete</p>
        <progress value="@uploadProgress" max="100"></progress>
    </div>
}
@code {
    private int uploadProgress { get; set; }
    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();

        foreach (var file in files)
        {
            if (file.ContentType == "application/pdf")
            {
                // Call a method to upload the file to the server
                await UploadFileAsync(file);
            }
        }

        await DataIngestor.IngestDataAsync(
        service,
        new PDFDirectorySource(Path.Combine(Directory.GetCurrentDirectory(),"wwwroot", "Data")));
    }

    private async Task UploadFileAsync(IBrowserFile file)
    {
        var fileName = file.Name;
        var filePath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "data", fileName);

        var directory = Path.GetDirectoryName(filePath);
        if (!Directory.Exists(directory))
        {
            Directory.CreateDirectory(directory);
        }
       

        var totalBytes = file.Size;
        var buffer = new byte[10092]; 
        var bytesUploaded = 0;

        try
        {
            using (var stream = new FileStream(filePath, FileMode.Create))
            {
                var fileStream = file.OpenReadStream(50*1024*1024);
                int bytesRead;
                while ((bytesRead = await fileStream.ReadAsync(buffer, 0, buffer.Length)) > 0)
                {
                    await stream.WriteAsync(buffer, 0, bytesRead);
                    bytesUploaded += bytesRead;

                    // Update the progress bar
                    uploadProgress = (int)((bytesUploaded / (float)totalBytes) * 100);

                    // Optionally, you can call StateHasChanged() to force the UI to update
                    StateHasChanged();
                }
            }

            Console.WriteLine($"File {fileName} uploaded successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error uploading file {fileName}: {ex.Message}");
        }
    }

}
